gdURL  <-  "http://tiny.cc/gapminder"
gDat  <- read.delim(file = gdURL)
str(gDat)
min(gDat$lifeExp)
max(gDat$lifeExp)
max('as')
max_minus_min <- function(x) max(x) - min(x)
max_minus_min(gDat$lifeExp)
runif(12)
max_minus_min(runif(12))
max_minus_min(runif(1000002))
mmm <- function(x) {
stopifnot(is.numeric(x))
max(x) - min(x)
}
mmm('asdfsdf')
mmm2 <- function(x) {
if(!is.numeric(x)) {
stop('I am so sorry, but this function only works for numeric input!')
}
max(x) - min(x)
}
mmm2(gDat)
install.packages(assertthat)
gDat
install.packages(assetthat)
install.packages(assertthat)
quantile(gDat$lifeExp)
boxplot(gDat$lifeExp, plot = FALSE)$stats
qdiff1 <- function(x, probs) {
the_quantiles <- quantile(x = x, probs = probs)
max(the_quantiles) - min(the_quantiles)
}
the_probs <- c(0.25, 0.75)
the_quantiles <- quantile(gDat$lifeExp, probs = the_probs)
IQR(gDat$lifeExp)
max(the_quantiles) - min(the_quantiles)
qdiff1(gDat$lifeExp, probs = c(0, 1))
install.packages(assertthat)
install.packages("assertthat")
library(assertthat)
qdiff4 <- function(x, probs = c(0, 1)) {
assert_that(is.numeric(x))
the_quantiles <- quantile(x, probs)
return(max(the_quantiles) - min(the_quantiles))
}
j_country =  <- "France"
(j_dat  <- subset(gDat, country == j_country))
j_country <- "France"
(j_dat  <- subset(gDat, country == j_country))
p  <- ggplot2(j_dat, aes(x = year, y = lifeExp))
library(ggplot2)
p  <- ggplot2(j_dat, aes(x = year, y = lifeExp))
p  <- ggplot2(j_dat, aes(x = year, y = lifeExp))
library('ggplot2')
p  <- ggplot2(j_dat, aes(x = year, y = lifeExp))
library('ggplot2')
library(ggplot2)
library(dplyr)
p  <- ggplot2(j_dat, aes(x = year, y = lifeExp))
p  <- ggplot(j_dat, aes(x = year, y = lifeExp))
p + geom_point()
p + geom_point() + geom_smooth(method = 'lm')
p + geom_point() + geom_smooth(method = 'lm', se = FALSE)
j_fit  <- lm(lifeExp ~ year, j_dat)
coef(j_fit)
j_fit  <- lm(lifeExp ~ I(year - 1952), j_dat)
I(year - 1952)
I(c(1, 2, 3) - 1952)
c(1, 2, 3)
c(1, 2, 3) - 123
j_fit
class(j_fit)
mode(j_fit)
j_fit[0]
j_fit[1]
j_fit[0][0]
j_fit[0][0][0]
j_fit[2]
j_fit[3]
j_fit[5]
j_fit[7]
coef(j_fit)
coef(j_fit)[1]
coef(j_fit)[2]
coef(j_fit)$Intercept
install.packages("plyr", dependencies = TRUE)
library(plyr)
library(dplyr)
(max_le_by_cont <- ddply(gDat, ~ continent, summarize, max_le = max(lifeExp)))
str(max_le_by_cont)
levels(max_le_by_cont$continent)
levels(max_le_by_cont$max_le)
(max_le_by_cont <- ddply(gDat, ~ continent, summarize, max_le = max(lifeExp)))
View(gDat)
View(gDat)
(max_le_by_cont <- ddply(gDat, ~ continent, summarize, min_gdpppc = min(gdpPercap))))
(min_gpd_by_cont <- ddply(gDat, ~ continent, summarize, min_gdpppc = min(gdpPercap)))
str(max_le_by_cont)
le_lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(lifeExp ~ I(year - offset), dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
le_lin_fit(subset(gDat, country == "Canada"))
j_coefs <- ddply(gDat, ~ country, le_lin_fit)
j_coefs
j_coefs <- ddply(gDat, ~ country + continent, le_lin_fit)
ggplot(j_coefs, aes(x = slope, y = country)) + geom_point(size = 3)
ggplot(j_coefs, aes(x = slope, y = reorder(country, slope))) +
geom_point(size = 3)
post_arrange <- j_coefs %>% arrange(slope)
post_arrange
h_countries <- c("Egypt", "Haiti", "Romania", "Thailand", "Venezuela")
hDat <- gDat %>%
filter(country %in% h_countries)
hDat %>% str
iDat  <- hDat %>% droplevels
iDat %>% str
table(iDat$country)
i_le_max <- iDat %>%
group_by(country) %>%
summarize(max_le = max(lifeExp))
i_le_max
ggplot(i_le_max, aes(x = country, y = max_le, group = 1)) +
geom_path() + geom_point(size = 3)
ggplot(iDat, aes(x = year, y = lifeExp, group = country)) +
geom_line(aes(color = country))
jDat <- iDat %>%
mutate(country = reorder(country, lifeExp, max))
ggplot(i_le_max, aes(x = country, y = max_le, group = 1)) +
geom_path() + geom_point(size = 3)
ggplot(iDat, aes(x = year, y = lifeExp, group = country)) +
geom_line(aes(color = country))
install('robustbase')
install.packages("robustbase")
library("robustbase")
lmrob(gdpPercp ~ YEAR)
lmrob(gdpPercap ~ year)
lmrob(gdpPercap ~ year, gDat)
lmrob(gdpPercap ~ year, gDat)  %>% coef
rbs  <- lmrob(gdpPercap ~ year, gDat)  %>% coef
rbs[0]
rbs[1]
ols <- lm(lifeExp ~ I(year - offset), gDat)
ols <- lm(lifeExp ~ I(year), gDat)
rbs$
inc
rbs$`(Intercept)`
ols_coef <- setNames(coef(ols), c("o_int", "o_slope"))
c(ols_coef[0])
c(ols_coef[1])
mode(ols_coef)
class(ols_coef)
typeof(ols_coef)
str(ols_coef)
c(ols_coef, ols_coef)
j_coefs <- ddply(gDat, ~ country + continent, function(gDat, offset = 1952) {
ols <- lm(lifeExp ~ I(year - offset), gDat)
rbs <- lmrob(lifeExp ~ I(year - offset), gDat)
ols_coef <- setNames(coef(ols), c("o_int", "o_slope"))
rbs_coef <- setNames(coef(ols), c("r_int", "r_slope"))
c(ols_coef, rbs_coef)
})
j_coefs
a <- list(veg = c("cabbage", "eggplant")
)
a
j_coefs <- ddply(gDat, ~ country + continent, function(gDat, offset = 1952) {
ols <- lm(lifeExp ~ I(year - offset), gDat)
rbs <- lmrob(lifeExp ~ I(year - offset), gDat)
ols_coef <- setNames(coef(ols), c("o_int", "o_slope"))
rbs_coef <- setNames(coef(ols), c("r_int", "r_slope"))
dif_coef <- setNames(c(ols_coef[1] - rbs_coef[1], ols_coef[2] - rbs_coef[2]),
c("d_int", "d_slope"))
c(ols_coef, rbs_coef, dif_coef)
})
j_coefs
ols_coef[1] - rbs_coef[1]
rbs_coef <- setNames(coef(ols), c("r_int", "r_slope"))
ols_coef[1] - rbs_coef[1]
j_coefs <- ddply(gDat, ~ country + continent, function(gDat, offset = 1952) {
ols <- lm(lifeExp ~ I(year - offset), gDat)
rbs <- lmrob(lifeExp ~ I(year - offset), gDat, setting = "KS2011")
ols_coef <- setNames(coef(ols), c("o_int", "o_slope"))
rbs_coef <- setNames(coef(ols), c("r_int", "r_slope"))
dif_coef <- setNames(c(ols_coef[1] - rbs_coef[1], ols_coef[2] - rbs_coef[2]),
c("d_int", "d_slope"))
c(ols_coef, rbs_coef, dif_coef)
})
j_coefs
warnings()
j_coefs <- ddply(gDat, ~ country + continent, function(gDat, offset = 1952) {
ols <- lm(lifeExp ~ I(year - offset), gDat)
rbs <- lmrob(lifeExp ~ I(year - offset), gDat, setting = "KS2011")
ols_coef <- setNames(coef(ols), c("o_int", "o_slope"))
rbs_coef <- setNames(coef(rbs), c("r_int", "r_slope"))
dif_coef <- setNames(c(ols_coef[1] - rbs_coef[1], ols_coef[2] - rbs_coef[2]),
c("d_int", "d_slope"))
c(ols_coef, rbs_coef, dif_coef)
})
j_coefs
p  <- ggplot(j_coefs, aes(x = d_slope, y = d_int)) + geom_point()
p  <- ggplot(j_coefs, aes(x = d_slope, y = d_int)) + geom_point()
p  <- ggplot(j_coefs, aes(x = r_slope, y = r_int)) + geom_point()
p  <- ggplot(gDat, aes(x = year, y = pop)) + geom_point()
ggplot(gDat, aes(x = year, y = pop)) + geom_point() + scale_y_log10() + facet_grid(~ continent) + geom_line(aes(group = country))
p
p  <- ggplot(j_coefs, aes(x = d_slope, y = d_int)) + geom_point()
p
p + labels()
p + geom_text()
p  <- ggplot(j_coefs, aes(x = d_slope, y = d_int, label = country)) + geom_point()
p + geom_text()
p + geom_text(hjust=0, vjust=0)
p + geom_text(hjust=0, vjust=0, size=3)
p + geom_text(hjust=2, vjust=2, size=3)
p + geom_text(hjust=0, vjust=1, size=3)
p  <- ggplot(gDat  %>% subset(country == 'China'), aes(x = year, y=lifeExp))
p + geom_point()
gDat  %>% filter(country == 'China')
j_coefs  %>% filter(country == 'China')
j_coefs  %>% filter(country == 'China' | country == 'Zimbabwe')
''
ggplot(gDat  %>% subset(country == 'Zimbabwe'), aes(x = year, y=lifeExp)) + geom_point()
