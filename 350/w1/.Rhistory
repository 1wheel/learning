as.numeric(as.character(5/6))
as.numeric(as.character(5/6)) * 6
as.numeric(as.character(5/6)) == 5/6
as.numeric(as.character(5/6))*6 == 5
as.numeric(as.character(5/6))*6
as.numeric(as.character(5/6))*6 ==5/6*6
typeof(as.numeric(as.character(5/6))*6)
typeof(5)
pi
cos(pi)
approx.pi <- 22/7
pi - approx.pi
ls
ls()
x <- c(7,8,910)
is.vector(x)
x /10
x +10
y <- -x
y == x
y == -x
identical(-y, x)
identical(-y/10, x/10)
c(-1, -3)
x[c(-1)]
x[c(-1, 20)]
x[c(-1, -3)]
x[c(-1, -2)]
as.numeric(as.character(5/6))*6 - 5
x <- c(7, 8,10,45)
c.arr <- array(x, dim(2,2))
c.arr <- array(x, dim=c(2,2))
x.arr
x.arr <- array(x, dim=c(2,2))
c.arr
c.arr
dim(x.arr)
is.vector(x.arr)
is.array(x.arr)
typeof(x.arr)
str(x.arr)
x.arr[1,2]
x.arr[3]
x.arr[,]
x.arr[,1]
x.arr[,2]
which(x.arr > 9)
calif_penn <- read.csv("http://www.stat.cmu.edu/~cshalizi/uADA/13/hw/01/calif_penn_2011.csv")
penn <- calif_penn[calif_penn[,"STATEFP"]==42,]
coefficients(lm(Median_house_value ~ Median_household_income, data=penn))
34100 < -26206.564 + 3.651*14719
penn.coefs <- coefficients(lm(Median_house_value ~ Median_household_income, data=penn))
penn.coefs
allegheny.rows <- 24:425
allegheny.rows <- 24:425
allegheny.medinc <- penn[allegheny.rows,"Median_household_income"]
allegheny.values <- penn[allegheny.rows,"Median_house_value"]
allegheny.fitted <- penn.coefs["(Intercept)"]+penn.coefs["Median_household_income"]*allegheny.medinc
plot(x=allegheny.fitted, y=allegheny.values,
xlab="Model-predicted median house values",
ylab="Actual median house values",
xlim=c(0,5e5),ylim=c(0,5e5))
abline(a=0,b=1,col="grey")
factory <- matrix(c(40,1,60,3),nrow=2)
is.matrix(factory)
factory
rep(7.6)
rep(7,6)
six.sevens <- matrix(rep(7,6),ncol=3)
factory %*% six.sevens
six.sevens %*% six.sevens
output <- c(10,20)
factory %*% output
t(factory)
det(factory)
factory
diag(10)
solve(factory)
factory %*% solve(factory)
solve(factory)
factory %*% c(1600, 70)
c(1600, 70) %*% factory
c(1600, 70) %*% solve(factory)
solve(factory) %*% c(1600, 70)
solve(factory) %*% c(1600, 80)
solve(factory) %*% c(1600, 1000)
solve(factory) %*% c(1600, 100)
solve(factory) %*% c(1600, 81)
solve(factory) %*% c(1600, 20)
solve(factory) %*% c(1600, 40)
solve(factory) %*% c(1600, 50)
rownames(factory) <- c("labor","steel")
colnames(factory) <- c("cars","trucks")
factory
colMeans(factory)
summary(factory)
rowMeans(factory)
apply(factory, 1, mean)
apply(factory, 1, sd)
apply(factory, 2, sd)
my.distribution <- list("exponential",7,FALSE)
my.distribution
list("exponential",7,FALSE)
list("exponential",2,FALSE)
list("exponential",2)
another.distribution <- list(family="gaussian",mean=7,sd=1,is.symmetric=TRUE)
my.distribution$was.estimated <- FALSE
my.distribution[["last.updated"]] <- "2011-08-30"
my.distribution[1]
a.matrix <- matrix(c(35,8,10,4),nrow=2)
colnames(a.matrix) <- c("v1","v2")
a.matrix
a.matrix$v1
a.matrix[,"v1"]
a.data.frame <- data.frame(a.matrix,logicals=c(TRUE,FALSE))
a.data.frame$v1
rbind(a.data.frame,list(v1=-3,v2=-5,logicals=TRUE))
rexp(n=10, rate=5)
exp.draws.1 <- rexp(n=200)
mean(exp.draws.1)
sd(exp.draws.1)
hist(exp.draws.1)
plot(exp.draws.1)
plot(exp.draws.1, exp.draws.10)
exp.draws.10 <- rexp(n=200, rate=10)
exp.draws.0.1 <- rexp(n=200, rate=.1)
exp.draws.0.5 <- rexp(n=200, rate=.5)
exp.draws.5 <- rexp(n=200, rate=.5)
plot(exp.draws.1, exp.draws.10)
rates = c(.1, .5, 1, 5, 10)
means = c(mean(exp.draws.0.1), mean(exp.draws.0.5), mean(exp.draws.1), mean(exp.draws.5), mean(exp.draws.10))
means
sds = c(sd(exp.draws.0.1), sd(exp.draws.0.5), sd(exp.draws.1), sd(exp.draws.5), sd(exp.draws.10))
draws <- rexp(n=1100000)
mean(draws)
sd(draws)
hist(draws)
draws[>1]
typeof(draws)
which(draws > 1)
mean(which(draws > 1))
mat <- matrix(draws, nrow=1100)
hist(mat)
hist(draw)
hist(draws)
hismat = hist(mat)
histmat
hismat
mat[371]
mat[,371]
hist(mat, 1, mean)
hist(apply(mat, 1, mean))
mean(draws*draws)
sd(draws)
mean(draws)
